/* ************************************************************************ */
/*         Queries to get counts of unique values by each column            */
/* ************************************************************************ */

/* ----------------- Teranet dataset with added columns ------------------- */

SELECT COUNT(*) AS num_rows,
       COUNT(DISTINCT transaction_id) AS transaction_id_unq_c,
       COUNT(DISTINCT lro_num) AS lro_num_unq_c,
       COUNT(DISTINCT pin) AS pin_unq_c,
       COUNT(DISTINCT consideration_amt) AS consideration_amt_unq_c,
       COUNT(DISTINCT registration_date) AS registration_date_unq_c,
       COUNT(DISTINCT postal_code) AS postal_code_unq_c,
       COUNT(DISTINCT unitno) AS unitno_unq_c,
       COUNT(DISTINCT street_name) AS street_name_unq_c,
       COUNT(DISTINCT street_designation) AS street_designation_unq_c,
       COUNT(DISTINCT street_direction) AS street_direction_unq_c,
       COUNT(DISTINCT municipality) AS municipality_unq_c,
       COUNT(DISTINCT street_number) AS street_number_unq_c,
       COUNT(DISTINCT x) AS x_unq_c,
       COUNT(DISTINCT y) AS y_unq_c,
       COUNT(DISTINCT objectid) AS objectid_unq_c,
       COUNT(DISTINCT dauid) AS dauid_unq_c,
       COUNT(DISTINCT csdname) AS csdname_unq_c,
       COUNT(DISTINCT street_name_raw) AS street_name_raw_unq_c,
       COUNT(DISTINCT date_disp) AS date_disp_unq_c,
       COUNT(DISTINCT price_disp) AS price_disp_unq_c,
       COUNT(DISTINCT year) AS year_unq_c,
       COUNT(DISTINCT year3) AS year3_unq_c,
       COUNT(DISTINCT year5) AS year5_unq_c,
       COUNT(DISTINCT year10) AS year10_unq_c,
       COUNT(DISTINCT xy) AS xy_unq_c,
       COUNT(DISTINCT pin_total_sales) AS pin_total_sales_unq_c,
       COUNT(DISTINCT xy_total_sales) AS xy_total_sales_unq_c,
       COUNT(DISTINCT pin_prev_sales) AS pin_prev_sales_unq_c,
       COUNT(DISTINCT xy_prev_sales) AS xy_prev_sales_unq_c,
       COUNT(DISTINCT pin_price_cum_sum) AS pin_price_cum_sum_unq_c,
       COUNT(DISTINCT xy_price_cum_sum) AS xy_price_cum_sum_unq_c,
       COUNT(DISTINCT pin_price_pct_change) AS pin_price_pct_change_unq_c,
       COUNT(DISTINCT xy_price_pct_change) AS xy_price_pct_change_unq_c,
       COUNT(DISTINCT price_da_pct_change) AS price_da_pct_change_unq_c,
       COUNT(DISTINCT pin_years_since_last_sale) AS pin_years_since_last_sale_unq_c,
       COUNT(DISTINCT xy_years_since_last_sale) AS xy_years_since_last_sale_unq_c,
       COUNT(DISTINCT da_days_since_last_sale) AS da_days_since_last_sale_unq_c,
       COUNT(DISTINCT da_years_since_last_sale) AS da_years_since_last_sale_unq_c,
       COUNT(DISTINCT pin_sale_next_6m) AS pin_sale_next_6m_unq_c,
       COUNT(DISTINCT pin_sale_next_1y) AS pin_sale_next_1y_unq_c,
       COUNT(DISTINCT pin_sale_next_3y) AS pin_sale_next_3y_unq_c,
       COUNT(DISTINCT xy_sale_next_6m) AS xy_sale_next_6m_unq_c,
       COUNT(DISTINCT xy_sale_next_1y) AS xy_sale_next_1y_unq_c,
       COUNT(DISTINCT xy_sale_next_3y) AS xy_sale_next_3y_unq_c
FROM teranet;

/* ************************************************************************ */
/*       Queries to get percentage of unique values by each column          */
/* ************************************************************************ */

/* ----------------- Teranet dataset with added columns ------------------- */
SELECT COUNT(*) AS num_rows,
       100.0 * COUNT(DISTINCT transaction_id) / COUNT(*) AS transaction_id_unq_p,
       100.0 * COUNT(DISTINCT lro_num) / COUNT(*) AS lro_num_unq_p,
       100.0 * COUNT(DISTINCT pin) / COUNT(*) AS pin_unq_p,
       100.0 * COUNT(DISTINCT consideration_amt) / COUNT(*) AS consideration_amt_unq_p,
       100.0 * COUNT(DISTINCT registration_date) / COUNT(*) AS registration_date_unq_p,
       100.0 * COUNT(DISTINCT postal_code) / COUNT(*) AS postal_code_unq_p,
       100.0 * COUNT(DISTINCT unitno) / COUNT(*) AS unitno_unq_p,
       100.0 * COUNT(DISTINCT street_name) / COUNT(*) AS street_name_unq_p,
       100.0 * COUNT(DISTINCT street_designation) / COUNT(*) AS street_designation_unq_p,
       100.0 * COUNT(DISTINCT street_direction) / COUNT(*) AS street_direction_unq_p,
       100.0 * COUNT(DISTINCT municipality) / COUNT(*) AS municipality_unq_p,
       100.0 * COUNT(DISTINCT street_number) / COUNT(*) AS street_number_unq_p,
       100.0 * COUNT(DISTINCT x) / COUNT(*) AS x_unq_p,
       100.0 * COUNT(DISTINCT y) / COUNT(*) AS y_unq_p,
       100.0 * COUNT(DISTINCT objectid) / COUNT(*) AS objectid_unq_p,
       100.0 * COUNT(DISTINCT dauid) / COUNT(*) AS dauid_unq_p,
       100.0 * COUNT(DISTINCT csdname) / COUNT(*) AS csdname_unq_p,
       100.0 * COUNT(DISTINCT street_name_raw) / COUNT(*) AS street_name_raw_unq_p,
       100.0 * COUNT(DISTINCT date_disp) / COUNT(*) AS date_disp_unq_p,
       100.0 * COUNT(DISTINCT price_disp) / COUNT(*) AS price_disp_unq_p,
       100.0 * COUNT(DISTINCT year) / COUNT(*) AS year_unq_p,
       100.0 * COUNT(DISTINCT year3) / COUNT(*) AS year3_unq_p,
       100.0 * COUNT(DISTINCT year5) / COUNT(*) AS year5_unq_p,
       100.0 * COUNT(DISTINCT year10) / COUNT(*) AS year10_unq_p,
       100.0 * COUNT(DISTINCT xy) / COUNT(*) AS xy_unq_p,
       100.0 * COUNT(DISTINCT pin_total_sales) / COUNT(*) AS pin_total_sales_unq_p,
       100.0 * COUNT(DISTINCT xy_total_sales) / COUNT(*) AS xy_total_sales_unq_p,
       100.0 * COUNT(DISTINCT pin_prev_sales) / COUNT(*) AS pin_prev_sales_unq_p,
       100.0 * COUNT(DISTINCT xy_prev_sales) / COUNT(*) AS xy_prev_sales_unq_p,
       100.0 * COUNT(DISTINCT pin_price_cum_sum) / COUNT(*) AS pin_price_cum_sum_unq_p,
       100.0 * COUNT(DISTINCT xy_price_cum_sum) / COUNT(*) AS xy_price_cum_sum_unq_p,
       100.0 * COUNT(DISTINCT pin_price_pct_change) / COUNT(*) AS pin_price_pct_change_unq_p,
       100.0 * COUNT(DISTINCT xy_price_pct_change) / COUNT(*) AS xy_price_pct_change_unq_p,
       100.0 * COUNT(DISTINCT price_da_pct_change) / COUNT(*) AS price_da_pct_change_unq_p,
       100.0 * COUNT(DISTINCT pin_years_since_last_sale) / COUNT(*) AS pin_years_since_last_sale_unq_p,
       100.0 * COUNT(DISTINCT xy_years_since_last_sale) / COUNT(*) AS xy_years_since_last_sale_unq_p,
       100.0 * COUNT(DISTINCT da_days_since_last_sale) / COUNT(*) AS da_days_since_last_sale_unq_p,
       100.0 * COUNT(DISTINCT da_years_since_last_sale) / COUNT(*) AS da_years_since_last_sale_unq_p,
       100.0 * COUNT(DISTINCT pin_sale_next_6m) / COUNT(*) AS pin_sale_next_6m_unq_p,
       100.0 * COUNT(DISTINCT pin_sale_next_1y) / COUNT(*) AS pin_sale_next_1y_unq_p,
       100.0 * COUNT(DISTINCT pin_sale_next_3y) / COUNT(*) AS pin_sale_next_3y_unq_p,
       100.0 * COUNT(DISTINCT xy_sale_next_6m) / COUNT(*) AS xy_sale_next_6m_unq_p,
       100.0 * COUNT(DISTINCT xy_sale_next_1y) / COUNT(*) AS xy_sale_next_1y_unq_p,
       100.0 * COUNT(DISTINCT xy_sale_next_3y) / COUNT(*) AS xy_sale_next_3y_unq_p
FROM teranet;
